##
# CAS Web Application Embedded Server SSL Configuration
#
#server.ssl.key-store=file:/etc/cas/thekeystore
#server.ssl.key-store-password=changeit
#server.ssl.key-password=changeit
server.ssl.enabled=false

##
# CAS Web Application Embedded Server Configuration
#
cas.server.prefix=http://10.40.5.51/cas
server.port=80
server.servlet.context-path=/cas
server.forward-headers-strategy=NATIVE
server.max-http-request-header-size=2097152
cas.tgc.secure=false
#cas.tgc.cookie.same-site-policy=off
cas.tgc.same-site-policy=off
cas.locale.cookie.secure=false
cas.locale.cookie.same-site-policy=off
server.error.include-stacktrace=ON_PARAM
server.error.include-message=ALWAYS
cas.ticket.st.time-to-kill-in-seconds=120
cas.ticket.tst.time-to-kill-in-seconds=36000
cas.ticket.pt.time-to-kill-in-seconds=30
cas.authn.oauth.code.timeToKillInSeconds=90
cas.authn.oauth.refreshToken.timeToKillInSeconds=86400

server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=10s

server.compression.enabled=true
server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

##
# CAS Web Application Embedded Tomcat Configuration
#
server.tomcat.max-http-form-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.connection-timeout=PT20S
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.threads.min-spare=10
server.tomcat.threads.max=400

server.tomcat.remoteip.port-header=X-Forwarded-Port
server.tomcat.remoteip.protocol-header=X-Forwarded-Proto
server.tomcat.remoteip.protocol-header-https-value=https
server.tomcat.remoteip.remote-ip-header=X-FORWARDED-FOR

server.tomcat.uri-encoding=UTF-8
server.tomcat.additional-tld-skip-patterns=*.jar

##
# CAS Web Application JMX/Spring Configuration
#
spring.jmx.enabled=false

##
# CAS Web Application Http Encoding Configuration
#
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

##
# Allow configuration classes to override bean definitions from Spring Boot
#
spring.main.allow-bean-definition-overriding=true
spring.main.lazy-initialization=true

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false

# Indicates that systemPropertiesOverride can be used. Set to false to
# prevent users from changing the default accidentally. Default true.
spring.cloud.config.allow-override=true

# External properties should override system properties.
spring.cloud.config.override-system-properties=false

# When allowOverride is true, external properties should take lowest priority,
# and not override any existing property sources (including local config files).
spring.cloud.config.override-none=false

# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

##
# CAS Web Application Core
#
spring.threads.virtual.enabled=true

##
# CAS Web Application Endpoints Security
#
management.endpoints.enabled-by-default=false

management.endpoint.shutdown.enabled=false
management.endpoint.restart.enabled=false

management.endpoints.web.base-path=/actuator

management.endpoints.web.exposure.include=info,health,status,configurationMetadata
management.endpoints.jmx.exposure.exclude=*

# management.endpoints.web.exposure.include=*
# management.endpoints.web.path-mapping.health=status
# management.endpoint.health.show-details=when_authorized

management.server.add-application-context-header=false

# Endpoint Security Basic Authentication
spring.security.user.name=casuser
# spring.security.user.password=
# spring.security.user.roles=

# Define a CAS-specific "WARN" status code and its order
management.endpoint.health.status.order=WARN,DOWN,OUT_OF_SERVICE,UNKNOWN,UP

# Define health indicator behavior (requires cas-server-core-monitor)
management.health.memoryHealthIndicator.enabled=true
# Define a default that doesn't require module /cas/actuator/health/ping serves as status
management.health.ping.enabled=true

# Turn off health indicators by default
management.health.defaults.enabled=false
spring.cloud.discovery.client.composite-indicator.enabled=false

# Enable info contributors for jvm and environment
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true

##
# Static Resources
#
spring.web.resources.cache.cachecontrol.max-age=1d

##
# CAS Web Application Session Configuration
#
#server.servlet.session.timeout=PT300S
server.servlet.session.cookie.http-only=true
server.servlet.session.tracking-modes=COOKIE
##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
spring.thymeleaf.template-resolver-order=100

##
# CAS Mustache View Configuration
#
spring.mustache.charset=UTF-8
spring.mustache.servlet.cache=true
spring.mustache.prefix=classpath:/templates/
spring.mustache.suffix=.mustache
##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.servlet.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS Observability/Tracing Configuration
#
management.tracing.enabled=true

# By default, sample only 25% of requests to
# prevent overwhelming the trace backend.
management.tracing.sampling.probability=0.25F

management.tracing.baggage.correlation.enabled=true
management.tracing.baggage=true

management.metrics.distribution.percentiles-histogram.http.server.requests=true

##
# CAS Metrics Configuration
#
management.atlas.metrics.export.enabled=false
management.datadog.metrics.export.enabled=false
management.ganglia.metrics.export.enabled=false
management.graphite.metrics.export.enabled=false
management.influx.metrics.export.enabled=false
management.jmx.metrics.export.enabled=false
management.newrelic.metrics.export.enabled=false
management.prometheus.metrics.export.enabled=false
management.signalfx.metrics.export.enabled=false
management.statsd.metrics.export.enabled=false
management.wavefront.metrics.export.enabled=false
management.elastic.metrics.export.enabled=false

management.metrics.enable.logback=false
management.metrics.enable.process.files=false
management.metrics.enable.system.cpu=false
management.metrics.enable.process.cpu=false
management.metrics.enable.process.uptime=false
management.metrics.enable.process.start.time=false

##
# CAS Swagger Configuration
#
springdoc.show-actuator=false
springdoc.model-and-view-allowed=false
springdoc.writer-with-default-pretty-printer=false
springdoc.swagger-ui.display-request-duration=false

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=false

##
# CAS Authentication Credentials
#
cas.authn.accept.enabled=false
cas.authn.accept.users=casuser::Mellon
cas.authn.accept.name=Static Credentials

##
# CAS Template Configuration
#
spring.groovy.template.enabled=false

# CAS doesn't rely on this, Spring Boot will warn it is on if not set
spring.jpa.open-in-view=false

##
# Default strategy for matching request paths against
# registered Spring MVC handler mappings
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

##
# Spring Boot Admin Server Settings
#
spring.boot.admin.server.enabled=true
spring.boot.admin.context-path=/sba
spring.boot.admin.notify.mail.enabled=false
spring.boot.admin.instance-auth.enabled=true
spring.boot.admin.instance-auth.service-map.CAS.user-name=${spring.security.user.name}
spring.boot.admin.instance-auth.service-map.CAS.user-password=${spring.security.user.password}

spring.boot.admin.ui.title=Apereo CAS
spring.boot.admin.ui.login-icon=assets/img/cas-logo.png
spring.boot.admin.ui.brand=<img src='assets/img/apereo-logo.png' style='width: unset'><img src='assets/img/cas-logo.png' style='width: unset'>
spring.boot.admin.ui.favicon=assets/img/favicon.ico
spring.boot.admin.ui.external-views[0].label=Documentation
spring.boot.admin.ui.external-views[0].url=https://apereo.github.io/cas
spring.boot.admin.ui.available-languages=en

spring.boot.admin.client.enabled=true
spring.boot.admin.client.period=5000
spring.boot.admin.client.instance.metadata.name=Apereo CAS ${cas.host.name:}
spring.boot.admin.client.instance.metadata.tags.name=Apereo CAS ${cas.host.name:}
spring.boot.admin.client.username=${spring.security.user.name}
spring.boot.admin.client.password=${spring.security.user.password}
spring.boot.admin.client.url=${cas.server.prefix}${spring.boot.admin.context-path}
spring.boot.admin.client.instance.management-base-url=${cas.server.prefix}
spring.boot.admin.client.instance.name=CAS
management.auditevents.enable=false

spring.cloud.compatibility-verifier.enabled=false

cas.authn.pac4j.cookie.same-site-policy=off
cas.authn.pac4j.cookie.secure=false
cas.authn.oauth.sessionReplication.cookie.same-site-policy=off
cas.authn.oauth.sessionReplication.cookie.secure=false

cas.authn.pac4j.core.sessionReplication.cookie.same-site-policy=off
cas.authn.pac4j.core.sessionReplication.cookie.secure=false
#cas.authn.pac4j.cas[0].loginUrl=https://id08.ruishan.cc/
#cas.authn.pac4j.cas[0].protocol=CAS30
#cas.authn.pac4j.cas[0].clientName=adapter
#cas.authn.pac4j.cas[0].auto-redirect-type=server
#cas.authn.pac4j.cas[0].css-class=cssClass
#cas.authn.pac4j.cas[0].call-backUrl-type=QUERY_PARAMETER
cas.logout.redirectUrl=


#cas.authn.jdbc.encode[0].sql=SELECT * FROM users WHERE username=?
#cas.authn.jdbc.query[0].password-encoder.type=DEFAULT
#cas.authn.jdbc.query[0].password-encoder.encoding-algorithm=SHA-256
cas.authn.jdbc.query[0].sql=SELECT * FROM users WHERE username=?
cas.authn.jdbc.query[0].field-password=pwd
cas.authn.jdbc.query[0].credential-criteria=.*
cas.authn.jdbc.query[0].user=postgres
cas.authn.jdbc.query[0].password=abc123Aa
cas.authn.jdbc.query[0].driver-class=org.postgresql.Driver
cas.authn.jdbc.query[0].url=jdbc:postgresql://172.17.9.95:35432/cas
#cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.PostgreSQLDialect


cas.service-registry.jpa.user=postgres
cas.service-registry.jpa.password=abc123Aa
cas.service-registry.jpa.driver-class=org.postgresql.Driver
cas.service-registry.jpa.url=jdbc:postgresql://172.17.9.95:35432/cas
cas.service-registry.jpa.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.integration.jdbc.initialize-schema=ALWAYS

cas.authn.rest[0].uri=http://localhost:8081/authn

cas.authn.pm.core.enabled=true
cas.authn.pm.core.autoLogin=false
cas.authn.pm.core.password-policy-pattern=^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_~=:;,.?]).{8,}$
cas.authn.pm.groovy.location=classpath:PasswordManagementService.groovy
cas.authn.pm.forgot-username.enabled=false
cas.authn.pm.reset.security-questions-enabled=false
CasFeatureModule.AccountManagement.enabled=false

cas.ticket.registry.jpa.user=postgres
cas.ticket.registry.jpa.password=abc123Aa
cas.ticket.registry.jpa.driver-class=org.postgresql.Driver
cas.ticket.registry.jpa.url=jdbc:postgresql://172.17.9.95:35432/cas
cas.ticket.registry.jpa.dialect=org.hibernate.dialect.PostgreSQLDialect
cas.ticket.registry.jpa.ddl-auto=update
CasFeatureModule.FeatureCatalog.OAuth=true



cas.tgc.crypto.enabled=true
cas.tgc.crypto.encryption.key=iGPVILY2mwViGUJ-gL31rUY8rpIGDeGkdZiHRqTDaPE
cas.tgc.crypto.signing.key=vV0T2RkE_HYyZhgu23NReGSifgKL-cn3IBsLYKb_4fkHfTtnBkW8B5WZWWm2uEcKH9ntCG6wR55gZ7FMDT7qQQ

#cas.authn.mfa.triggers.global.global-provider-id=gauthMfa
#cas.authn.mfa.gauth.jpa.ddl-auto=create
#cas.authn.mfa.gauth.jpa.driver-class=org.postgresql.Driver
#cas.authn.mfa.gauth.jpa.password=abc123Aa
#cas.authn.mfa.gauth.jpa.url=jdbc:postgresql://172.17.9.95:35432/cas
#cas.authn.mfa.gauth.jpa.user=postgres
#cas.authn.mfa.gauth.jpa.dialect=org.hibernate.dialect.PostgreSQLDialect
#cas.authn.mfa.gauth.id=gauthMfa
#cas.authn.mfa.gauth.core.multiple-device-registration-enabled=true
#cas.monitor.endpoints.endpoint.defaults.access=ANONYMOUS
#cas.authn.mfa.gauth.crypto.signing.key=_dv4tt4JOA7SXHxKqly-jBGr05l74nVctUv1ngLmzuHWjr2BNhLb5VZIxdqp7_wbOotJMXS6AAA388BhwrHJRg
#cas.authn.mfa.gauth.crypto.encryption.key=u1B5PPyJDaJe9ECw1SyAlJNRpDBz6WoRjxY1kwm7lak


